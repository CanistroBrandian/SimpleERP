// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleERP.Models.Context;

namespace SimpleERP.Migrations
{
    [DbContext(typeof(ContextEF))]
    partial class ContextEFModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.ClientOrder", b =>
                {
                    b.Property<int>("ClientId");

                    b.Property<int>("OrderId");

                    b.HasKey("ClientId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("ClientOrders");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.EmployeClient", b =>
                {
                    b.Property<int>("ClientId");

                    b.Property<int>("EmployeId");

                    b.Property<int?>("OrderId");

                    b.HasKey("ClientId", "EmployeId");

                    b.HasIndex("EmployeId");

                    b.HasIndex("OrderId");

                    b.ToTable("EmployeClients");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.EmployeOrder", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("EmployeId");

                    b.HasKey("OrderId", "EmployeId");

                    b.HasIndex("EmployeId");

                    b.ToTable("EmployeOrders");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Login");

                    b.Property<string>("NameFirst");

                    b.Property<string>("NameLast");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Departament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeId");

                    b.Property<string>("Name");

                    b.Property<int>("WarehouseId");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Departmaentes");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.GoalEntity.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssigneId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateFinished");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("ReporterId");

                    b.HasKey("Id");

                    b.HasIndex("AssigneId");

                    b.HasIndex("ReporterId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.OrderEntity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId");

                    b.Property<int>("EmployeId");

                    b.Property<string>("Information");

                    b.Property<int>("ProductId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.OrderEntity.OrderProduct", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.WarehouseEntity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("OrderId");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.WarehouseEntity.Stock", b =>
                {
                    b.Property<int>("WarehouseId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Count");

                    b.HasKey("WarehouseId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.WarehouseEntity.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.Client", b =>
                {
                    b.HasBaseType("SimpleERP.Models.Entities.Auth.User");


                    b.ToTable("Client");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.Employe", b =>
                {
                    b.HasBaseType("SimpleERP.Models.Entities.Auth.User");

                    b.Property<int>("DepartamentId");

                    b.HasIndex("DepartamentId");

                    b.ToTable("Employe");

                    b.HasDiscriminator().HasValue("Employe");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.Manager", b =>
                {
                    b.HasBaseType("SimpleERP.Models.Entities.Auth.Employe");


                    b.ToTable("Manager");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.ClientOrder", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.Auth.Client", "Client")
                        .WithMany("ClientOrders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SimpleERP.Models.Entities.OrderEntity.Order", "Order")
                        .WithMany("ClientOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.EmployeClient", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.Auth.Client", "Client")
                        .WithMany("EmployeClients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SimpleERP.Models.Entities.Auth.Employe", "Employe")
                        .WithMany("EmployeClients")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SimpleERP.Models.Entities.OrderEntity.Order")
                        .WithMany("EmployeClients")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.EmployeOrder", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.Auth.Employe", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SimpleERP.Models.Entities.OrderEntity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.UserRole", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.Auth.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SimpleERP.Models.Entities.Auth.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Departament", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.WarehouseEntity.Warehouse", "Warehouse")
                        .WithMany("Departaments")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.GoalEntity.Goal", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.Auth.Employe", "Assigne")
                        .WithMany("Goals")
                        .HasForeignKey("AssigneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SimpleERP.Models.Entities.Auth.Manager", "Reporter")
                        .WithMany("CreatedGoals")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.OrderEntity.OrderProduct", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.OrderEntity.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SimpleERP.Models.Entities.WarehouseEntity.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.WarehouseEntity.Stock", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.WarehouseEntity.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SimpleERP.Models.Entities.WarehouseEntity.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SimpleERP.Models.Entities.Auth.Employe", b =>
                {
                    b.HasOne("SimpleERP.Models.Entities.Departament", "Departament")
                        .WithMany("Employees")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
